@page "/ModuleBank/LaporanCashBank"
@using eSoft.CashBank.Model
@using eSoft.CashBank.View

@using eSoft.CashBank.Services

@inject ICashBankServices cashBank

@inject NavigationManager navigationmanager

<div class="container">
    <h1>Laporan Cash Bank</h1>
</div>


<div class="container">

    <input type="checkbox" checked=@asChecked
           @onchange="EventArgs => { CheckboxAll(EventArgs.Value); }" />
    <label>Selected All</label>

    <br />
    <br />


    @foreach (var bank in Banks)
    {
        var Text = bank.NmBank;
        var Value = bank.KodeBank.ToString();
        bool Checked = false;
        if (selectedList.Contains(Value))
        {
            Checked = true;
        }


        <input type="checkbox" checked="@Checked"
           @onchange="EventArgs => { CheckboxClicked(Value, EventArgs.Value); }" />
        <label>@bank.NmBank</label>

        <br />
    }
    @OutputValue
</div>

<br />
<br />


<div class="container">
    <DataGridComponent Items="BankView" Context="cbBank" GetFilterableText="@(item =>$"{item.KodeBank} {item.NmBank} {item.Kurs}")">
        <TableHeader>
            <th scope="col">Code</th>
            <th scope="col">Bank Name</th>
            <th scope="col">Saldo</th>
            <th scope="col">Balance</th>
            <th scope="col">Currency</th>
            <th scope="col">Date Trx</th>
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@cbBank.KodeBank</td>
            <td>@cbBank.NmBank</td>
            <td>@cbBank.Saldo.ToString("N")</td>
            <td>@cbBank.KSaldo.ToString("N")</td>
            <td>@cbBank.Kurs</td>

            <td>

                <button @onclick="() => OpenCetak(cbBank.ClrDate,cbBank.KodeBank)" class="btn btn-success">Mutasi</button>

            </td>
        </RowTemplate>
    </DataGridComponent>


</div>


@if (SearchOpen)
{

    <DataGridComponent Items="RekKoran" Context="cbBank" GetFilterableText="@(item =>$"{item.Keterangan} {item.DocNo} ")">
        <TableHeader>
            <th scope="col">Doc #</th>
            <th scope="col">Tanggal</th>
            <th scope="col">Keterangan</th>
            <th scope="col">Mutasi</th>
            <th scope="col">Saldo</th>
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@cbBank.DocNo</td>
            <td>@cbBank.Tanggal.ToShortDateString()</td>
            <td>@cbBank.Keterangan</td>
            <td>@cbBank.Saldo.ToString("N")</td>
            <td>@cbBank.Balance.ToString("N")</td>
            <td>
                @*<button @onclick="() => BtnChoose(cbBank.GlAcct)" class="btn btn-success">Choose</button>*@

            </td>
        </RowTemplate>
    </DataGridComponent>

}



@code {

    private List<CbBank> Banks;
    private List<CbBank> BankView = new List<CbBank>();
    private List<RekeningView> RekKoran = new List<RekeningView>();


    private CbBank _bankToDelete;
    private List<string> selectedList = new List<string>();
    private string OutputValue { get; set; }

    private DateTime TglStart = DateTime.Today;
    private DateTime TglEnd = DateTime.Today;

    public bool DeleteDialogOpen { get; set; }
    public bool NullDialogOpen { get; set; }
    public bool SearchOpen { get; set; }


    public bool asChecked { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadGet();

    }

    private void LoadGet()
    {
        Banks = cashBank.GetBank();
    }




    private void OpenCetak(DateTime Tanggal1, string KodeBank)
    {
        RekKoran = cashBank.CetakMutasi(Tanggal1, DateTime.Today, KodeBank);
        SearchOpen = !SearchOpen;
    }


    private void CheckboxAll(object aChecked)
    {
        if ((bool)aChecked)
        {
            foreach (var bank in Banks)
            {
                selectedList.Add(bank.KodeBank);
            }
        }
        else
        {
            foreach (var bank in Banks)
            {
                selectedList.Remove(bank.KodeBank);
            }
        }
        OutputValue = string.Join(",", selectedList.ToArray());

        BankView = (from e in Banks where selectedList.Contains(e.KodeBank) select e).ToList();


        StateHasChanged();
    }

    private void CheckboxClicked(string aSelectedId, object aChecked)
    {
        if ((bool)aChecked)
        {
            if (!selectedList.Contains(aSelectedId))
            {
                selectedList.Add(aSelectedId);
            }
        }
        else
        {
            if (selectedList.Contains(aSelectedId))
            {
                selectedList.Remove(aSelectedId);


            }
        }

        OutputValue = string.Join(",", selectedList.ToArray());

        BankView = (from e in Banks where selectedList.Contains(e.KodeBank) select e).ToList();


        StateHasChanged();

    }

    private void OnSearchClose(bool accepted)
    {

        SearchOpen = false;
        StateHasChanged();

    }
 }
