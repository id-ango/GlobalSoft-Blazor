@page "/ModulePersediaan/AddLokasi"
@using eSoft.Persediaan.Model
@using eSoft.Persediaan.View
@using eSoft.Persediaan.Services

@inject IInventoryServices service
@inject NavigationManager navigationmanager


<div class="top-row px-4 " style="z-index:5">
    <h3>Add Lokasi</h3>
</div>

<div class="content px-4">
   
    <EditForm Model="@bank" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>
                Lokasi :
                <InputText id="codeBank" class="form-control" @bind-Value="bank.Lokasi" style="text-transform:uppercase" @onfocusout="cekKode" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Name :
                <InputText class="form-control" @bind-Value="bank.NamaLokasi" />
            </label>
        </div>
        
        <br/>
        <div class="container">
            <button class="btn-success" type="submit">Simpan</button>
            <button class="btn-danger" type="button" @onclick="@(() => navigationmanager.NavigateTo("/ModulePersediaan/SetupLokasi", false))">Batal</button>
        </div>

    </EditForm>
    
</div>

@if (DialogOpen)
{
    <ModalDialogComponent Title="Alert" Text="Lokasi Sudah Ada" TombolSave="false" OnClose="OnDialogClose"></ModalDialogComponent>
}

<style>
    label {
        width: 100%;
    }
</style>

@code {
    IcLokasiView bank = new IcLokasiView();
    public string Testing { get; set; }
    private bool DialogOpen { get; set; }
   
    public bool SearchOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        bank.Lokasi = "";
     
    }

    private void cekKode()
    {
        Testing = bank.Lokasi;
        DialogOpen = service.CekKdLokasi(Testing);
        if (DialogOpen)
        {
            bank.Lokasi = "";
        }
        StateHasChanged();
    }

    private void OnDialogClose(bool accepted)
    {

        DialogOpen = false;
        StateHasChanged();

    }



    private void HandleValidSubmit()
    {
        var newEdit = service.AddIcLokasi(bank);
        if (newEdit)
        {


        }

        navigationmanager.NavigateTo("/ModulePersediaan/SetupLokasi", false);

    }

  
}
