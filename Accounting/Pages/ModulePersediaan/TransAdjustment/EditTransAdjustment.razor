@page "/ModulePersediaan/EditTransAdjustment/{Id:int}"
@using eSoft.Persediaan.Model
@using eSoft.Persediaan.View
@using eSoft.Persediaan.Services

@inject IIcAdjustServices service
@inject IInventoryServices serviceIC
@inject NavigationManager navigationmanager




<div class="top-row px-4 " style="z-index:5">
    <h3>Edit Transaksi Adjustment</h3>
</div>


<div class="container">
    <EditForm Model="@Transh" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />


        <div class="form-group">
            <label>
                Kode :
                <InputText class="form-control" @bind-Value="Transh.NoFaktur" style="text-transform:uppercase" disabled="disabled" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Tanggal :
                <InputDate class="form-control" @bind-Value="Transh.Tanggal" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Keterangan :
                <InputTextArea class="form-control" @bind-Value="Transh.Keterangan" style="width:150%" />
            </label>
        </div>


        <div class="float-md-right">
            <button class="btn-success" type="submit">Simpan</button>
        </div>

        <br />
        <br />

    </EditForm>
</div>
<div class="container">
    <DetailGridComponent Items="Transh.IcTransDs" Context="transaksi">
        <TableHeader>
            <th scope="col">Item</th>
            <th scope="col">Nama</th>
            <th scope="col">Satuan</th>
            <th scope="col">Lokasi</th>
            <th scope="col">Qty</th>
            <th scope="col">Harga</th>
            <th scope="col">Jumlah</th>
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@transaksi.ItemCode</td>
            <td>@transaksi.NamaItem</td>
            <td>@transaksi.Satuan</td>
            <td>@transaksi.Lokasi</td>
            <td>@transaksi.QtyShp.ToString("N")</td>
            <td>@transaksi.Harga.ToString("N")</td>
            <td>@transaksi.Jumlah.ToString("N")</td>

            <td>
                <button @onclick="(() => Rubah(transaksi))" class="btn btn-success">Edit</button>
                <button @onclick="(() => Hapus(transaksi))" class="btn btn-danger">Delete</button>
            </td>
        </RowTemplate>
    </DetailGridComponent>
    <Button Class="btn btn-info" @onclick="@OnAddLine">Add Line</Button>
</div>

@if (IsVisible)
{
    <ModalPersediaanComponent SrcCode="srccode" OnClose="OnVisibleClose" OnDetail="OnDetailTrans" isEdit="IsEdit" DetailRubah="Transd" Location="banks"></ModalPersediaanComponent>
}


@if (DialogOpen)
{
    <ModalDialogComponent Title="Alert" Text="Kode Bank Sudah Ada" TombolSave="false" OnClose="OnDialogClose"></ModalDialogComponent>
}



@code {

    [Parameter]
    public int Id { get; set; }

    IcTransHView Transh = new IcTransHView() { IcTransDs = new List<IcTransDView>() };
    private IcTransH TransAll = new IcTransH() { IcTransDs = new List<IcTransD>() };
    private List<IcItem> srccode;
    private List<IcLokasi> banks;
    private IcTransDView Transd = new IcTransDView();
    private IcTransDView TransK = new IcTransDView();


    public string kurs { get; set; } = "";

    public string Testing { get; set; }
    private bool DialogOpen { get; set; }
    public bool IsVisible { get; set; }
    public bool IsKurs { get; set; }
    public bool IsEdit { get; set; }
    public bool SearchOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // Transh.Tanggal = DateTime.Now;
        LoadBank();
        LoadSrcCode();
        LoadTrans();
    }

    #region ondialogbutton

    private void OnVisibleClose()
    {

        IsVisible = false;
        IsKurs = false;
        StateHasChanged();

    }

    private void OnDialogClose(bool accepted)
    {

        DialogOpen = false;
        StateHasChanged();

    }

    #endregion


    private void HandleValidSubmit()
    {

        var newEdit = service.EditTransH(Transh);
        if (newEdit != null)
        {
            //  var id = newEdit.IcTransHId.ToString().Trim();
            var id = Transh.IcTransHId.ToString().Trim();
            navigationmanager.NavigateTo("/ModulePersediaan/TransAdjustment", false);
            //  navigationmanager.NavigateTo($"/PrintBuktiBayar/{id}");
        }

    }

    private void OnDetailTrans(IcTransDView transD)
    {
        transD.NamaItem = serviceIC.GetIcItemProduk(transD.ItemCode).NamaItem;
        transD.Satuan = serviceIC.GetIcItemProduk(transD.ItemCode).Satuan;

        if (!IsEdit)
        {

            Transh.IcTransDs.Add(transD);
        }

        IsVisible = false;
        IsKurs = false;
        IsEdit = false;
        StateHasChanged();
    }

    private void OnAddLine()
    {
        if (!string.IsNullOrEmpty(kurs))
        {
            this.IsVisible = false;
            this.IsKurs = true;
        }
        else
        {
            this.IsVisible = true;
            this.IsKurs = false;
        }

        StateHasChanged();


    }

    #region loadall

    void LoadBank()
    {

        banks = serviceIC.GetIcLokasi();
    }

    void LoadSrcCode()
    {

        srccode = serviceIC.GetIcItem();

    }

    void LoadTrans()
    {
        TransAll = service.GetIcTrans(Id);
        Transh.IcTransHId = Id;
        Transh.NoFaktur = TransAll.NoFaktur;
        Transh.Tanggal = TransAll.Tanggal;

        //   Transh.Supplier = TransAll.Supplier;

        Transh.Keterangan = TransAll.Keterangan;
        foreach (var item in TransAll.IcTransDs)
        {
            Transh.IcTransDs.Add(new IcTransDView
            {
                ItemCode = item.ItemCode,
                NamaItem = item.NamaItem,
                Satuan = item.Satuan,
                Lokasi = item.Lokasi,
                QtyShp = item.QtyShp,
                Harga = item.Harga,
                Jumlah = item.Jumlah
            });
        }
    }


    #endregion

    #region button detail
    private void Rubah(IcTransDView transd)
    {
        Transd = new IcTransDView();
        Transd = transd;
        IsEdit = true;
        OnAddLine();


    }

    private void Hapus(IcTransDView transd)
    {

        Transh.IcTransDs.Remove(transd);
        //ShowOnClick();
    }
    #endregion


    //private void BtnChoose(string textSearch)
    //{
    //    if (!string.IsNullOrEmpty(textSearch))
    //    {
    //        Transh.Supplier = textSearch;
    //    }

    //    SearchOpen = false;
    //    StateHasChanged();
    //}

    private void OnSearchClose(bool accepted)
    {

        SearchOpen = false;
        StateHasChanged();

    }



}
