@page "/ModulePersediaan/SetupAcctSet"
@using eSoft.Persediaan.Model
@using eSoft.Persediaan.Services

@inject IInventoryServices cashBank
@implements IDisposable
@inject NavigationManager navigationmanager

<div class="container">
    <h1>Setup Account Set</h1>
</div>


<div class="container">
    <NavLink href="/ModulePersediaan/AddAcctSet" class="btn btn-primary">Add</NavLink>
</div>

<br />
<br />

<div class="container">
    <DataGridComponent Items="Banks" Context="cbBank" GetFilterableText="@(item =>$"{item.AcctSet} {item.Description}")">
        <TableHeader>
            <th scope="col">Code</th>
            <th scope="col">Description</th>
            <th scope="col">Account 1</th>
            <th scope="col">Account 2</th>
            <th scope="col">Account 3</th>
            <th scope="col">Account 4</th>
            <th scope="col">Account 5</th>
            <th scope="col">Account 6</th>
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@cbBank.AcctSet</td>
            <td>@cbBank.Description</td>
            <td>@cbBank.Acct1</td>
            <td>@cbBank.Acct2</td>
            <td>@cbBank.Acct3</td>
            <td>@cbBank.Acct4</td>
            <td>@cbBank.Acct5</td>
            <td>@cbBank.Acct6</td>
            <td>
                <button @onclick="() => OpenRubah(cbBank.IcAcctId)" class="btn btn-success">Edit</button>
                <button @onclick="() => OpenDeleteDialog(cbBank)" class="btn btn-danger">Delete</button>
            </td>
        </RowTemplate>
    </DataGridComponent>


</div>

@if (DeleteDialogOpen)
{
    <ModalDialogComponent Title="Are you sure?" Text="Do you want to delete this entry?" OnClose="OnDeleteDialogClose"></ModalDialogComponent>
}

@if (NullDialogOpen)
{
    <ModalDialogComponent Title="MESSAGE" Text="Saldo is not Zero" TombolSave="false" OnClose="OnDeleteNullClose"></ModalDialogComponent>
}



@code {

    private List<IcAcct> Banks;
    private IcAcct _bankToDelete;

    public bool DeleteDialogOpen { get; set; }
    public bool NullDialogOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadGet();

    }


    private void LoadGet()
    {
        Banks = cashBank.GetIcAcct();
    }


    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await cashBank.DelIcAcct(_bankToDelete.IcAcctId);
            _bankToDelete = null;
        }

        DeleteDialogOpen = false;
        LoadGet();

        StateHasChanged();

    }

    private void OnDeleteNullClose(bool accepted)
    {
        //if (accepted)
        //{
        //    await cashBank.DelBank(_bankToDelete.CbBankId);
        //    _bankToDelete = null;
        //}

        DeleteDialogOpen = false;
        NullDialogOpen = false;
        LoadGet();
        StateHasChanged();

    }
    private void OpenDeleteDialog(IcAcct bank)
    {
        
            DeleteDialogOpen = true;
        


        _bankToDelete = bank;
        StateHasChanged();
    }

    private void OpenRubah(int xKdBank)
    {
        navigationmanager.NavigateTo($"/ModulePersediaan/EditAcctSet/{xKdBank}");
    }


    public void Dispose()
    {

    }
}
