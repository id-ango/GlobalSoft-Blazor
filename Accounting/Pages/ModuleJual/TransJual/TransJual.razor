@page "/ModuleJual/TransJual"
@using eSoft.Penjualan.Model
@using eSoft.Penjualan.Services


@inject ISalesServices service
@implements IDisposable
@inject NavigationManager navigationmanager

<div class="container">
    <h1>Transaksi Penjualan</h1>
</div>


<div class="container">
    <NavLink href="/ModuleJual/AddTransJual" class="btn btn-primary">Add</NavLink>
    <NavLink href="/ModuleJual/AddTransReturJual" class="btn btn-primary">Retur</NavLink>

</div>

<br />
<br />


<div class="container">
    <DataGridVerticalComponent Items="TransHeader" Context="transaksi" GetFilterableText="@(item =>$"{item.NoLpb} {item.NamaCust} {item.Keterangan}")">
        <TableHeader>

            <th scope="col">No Bukti</th>
            <th scope="col">Customer</th>
            <th scope="col">Tanggal</th>
            <th scope="col">Keterangan</th>
            <th scope="col">Total</th>
            <th scope="col">Jumlah</th>
            <th scope="col">PPN</th>
            <th scope="col">Ongkir</th>
            <th></th>
        </TableHeader>
        <RowTemplate>

            <td>@transaksi.NoLpb</td>
            <td>@transaksi.NamaCust</td>
            <td>@transaksi.Tanggal.ToShortDateString()</td>
            <td>@transaksi.Keterangan</td>
            <td>@transaksi.TtlJumlah.ToString("N")</td>
            <td>@transaksi.Jumlah.ToString("N")</td>
            <td>@transaksi.Ppn.ToString("N")</td>
            <td>@transaksi.Ongkos.ToString("N")</td>

            <td>
                <button @onclick="() => OpenRubah(transaksi.OeTransHId)" class="btn btn-success">Edit</button>
                <button @onclick="() => OpenDeleteDialog(transaksi)" class="btn btn-danger">Delete</button>
                <button @onclick="() => OpenPrint(transaksi.OeTransHId)" class="btn btn-danger">Print</button>
            </td>
        </RowTemplate>
    </DataGridVerticalComponent>


</div>

@if (DeleteDialogOpen)
{
    <ModalDialogComponent Title="Are you sure?" Text="Do you want to delete this entry?" OnClose="OnDeleteDialogClose"></ModalDialogComponent>
}

@if (NullDialogOpen)
{
    <ModalDialogComponent Title="MESSAGE" Text="Transaction Already Posting" TombolSave="false" OnClose="OnDeleteNullClose"></ModalDialogComponent>
}



@code {

    private List<OeTransH> TransHeader;
    private List<OeTransD> TransDetail;
    private OeTransH _bankToDelete;

    public bool DeleteDialogOpen { get; set; }
    public bool NullDialogOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadGet();

    }

    private void LoadGet()
    {
        TransHeader = service.GetTransH();
        TransDetail = service.GetTransD();
    }


    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await service.DelTransH(_bankToDelete.OeTransHId);
            _bankToDelete = null;
        }

        DeleteDialogOpen = false;
        LoadGet();

        StateHasChanged();

    }

    private void OnDeleteNullClose(bool accepted)
    {
        //if (accepted)
        //{
        //    await service.DelBank(_bankToDelete.CbBankId);
        //    _bankToDelete = null;
        //}

        DeleteDialogOpen = false;
        NullDialogOpen = false;
        LoadGet();
        StateHasChanged();

    }
    private void OpenDeleteDialog(OeTransH bank)
    {
        if (bank.Cek == "3")
        {
            NullDialogOpen = true;
        }
        else
        {
            DeleteDialogOpen = true;
        }


        _bankToDelete = bank;
        StateHasChanged();
    }

    private void OpenRubah(int xKdBank)
    {
        navigationmanager.NavigateTo($"/ModuleJual/EditTransJual/{xKdBank}");
    }

    private void OpenPrint(int xKdBank)
    {
        navigationmanager.NavigateTo($"/PrintSuratJalan/{xKdBank}");
    }


    public void Dispose()
    {

    }
}
