@page "/ModuleHutang/AddSupplier"
@using eSoft.Hutang.Model
@using eSoft.Hutang.View
@using eSoft.Hutang.Services

@inject IPayableServices service
@inject NavigationManager navigationmanager


<div class="top-row px-4 " style="z-index:5">
    <h3>Add Supplier</h3>
</div>

<div class="content px-4">
   
    <EditForm Model="@bank" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>
                Supplier :
                <InputText id="codeBank" class="form-control" @bind-Value="bank.Supplier" style="text-transform:uppercase" @onfocusout="cekKode" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Name :
                <InputText class="form-control" @bind-Value="bank.NamaSup" />
            </label>
        </div>
        <div class="form-group">
            <table>
                <tr>
                    <td>
                        <label>
                            Address :
                            <InputTextArea class="form-control" @bind-Value="bank.Alamat" />
                        </label>
                    </td>
                    <td>
                        <label>
                            City :
                            <InputText class="form-control" @bind-Value="bank.Kota" />
                        </label>
                    </td>
                </tr>

            </table>

        </div>


        <div class="form-group">
            <label>
                Telpon :
                <InputText class="form-control" @bind-Value="bank.Telpon" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Kontak :
                <InputText class="form-control" @bind-Value="bank.Kontak" />
            </label>
        </div>

        <div class="form-group">
            <label>
                GL Account :
                <InputSelect class="form-control" @bind-Value="bank.AcctSet" style="width:80%; display:inline">
                    <option value="">&nbsp;&nbsp;---Select GL Account---&nbsp;&nbsp;</option>
                    @foreach (var item in GlAccounts)
                    {
                        <option value="@item.AcctSet">@item.Description</option>
                    }

                </InputSelect>
                <button class="btn btn-primary" type="button" @onclick="@(()=> SearchOpen = !SearchOpen)">Cari</button>
            </label>
        </div>

        <div class="form-group">
            <label>
                Kurs :
                <InputText class="form-control" @bind-Value="bank.Kurs" />
            </label>
        </div>

        <div class="float-md-right">
            <button class="btn-success" type="submit">Simpan</button>
        </div>

    </EditForm>
    
</div>

@if (DialogOpen)
{
    <ModalDialogComponent Title="Alert" Text="Customer Sudah Ada" TombolSave="false" OnClose="OnDialogClose"></ModalDialogComponent>
}

@if (SearchOpen)
{

    <ModalSearchComponent OnClose="OnSearchClose" Items="GlAccounts" Context="cbBank" GetFilterableText="@(item =>$"{item.AcctSet} {item.Description} ")">
        <TableHeader>
            <th scope="col">Code</th>
            <th scope="col">Description</th>

            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@cbBank.AcctSet</td>
            <td>@cbBank.Description</td>

            <td>
                <button @onclick="() => BtnChoose(cbBank.AcctSet)" class="btn btn-success">Choose</button>

            </td>
        </RowTemplate>
    </ModalSearchComponent>


}
<style>
    label {
        width: 100%;
    }
</style>

@code {
    SupplierView bank = new SupplierView();
    public string Testing { get; set; }
    private bool DialogOpen { get; set; }
    private List<ApAcct> GlAccounts;
    public bool SearchOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        bank.Supplier = "";
        LoadGlAccounts();
    }

    private void cekKode()
    {
        Testing = bank.Supplier;
        DialogOpen = service.CekKdSupplier(Testing);
        if (DialogOpen)
        {
            bank.Supplier = "";
        }
        StateHasChanged();
    }

    private void OnDialogClose(bool accepted)
    {

        DialogOpen = false;
        StateHasChanged();

    }



    private void HandleValidSubmit()
    {
        var newEdit = service.AddSupplier(bank);
        if (newEdit)
        {


        }

        navigationmanager.NavigateTo("/ModuleHutang/SetupSupplier", false);

    }

    void LoadGlAccounts()
    {
        GlAccounts = service.GetApAkunSet();
    }

    private void BtnChoose(string textSearch)
    {
        if (textSearch != null || textSearch != "")
        {
            bank.AcctSet = textSearch;
        }

        SearchOpen = false;
        StateHasChanged();
    }

    private void OnSearchClose(bool accepted)
    {

        SearchOpen = false;
        StateHasChanged();

    }
}
