@page "/ModuleHutang/TransApDp"
@using eSoft.Hutang.Model
@using eSoft.Hutang.Services

@inject IPaymentApDpServices service
@inject IPayableServices cashBank
@implements IDisposable
@inject NavigationManager navigationmanager

<div class="container">
    <h1>Transaksi Bayar Dimuka </h1>
</div>


<div class="container">
    <NavLink href="/ModuleHutang/AddTransApDp" class="btn btn-primary">Add</NavLink>
</div>

<br />
<br />


<div class="container">
    <DataGridComponent Items="TransHeader" Context="transaksi" GetFilterableText="@(item =>$"{item.Bukti} {item.Keterangan} {item.NamaSup}")">
        <TableHeader>
            <th scope="col">Doc #</th>
            <th scope="col">Bank</th>
            <th scope="col">Supplier</th>
            <th scope="col">Tanggal</th>
            <th scope="col">Keterangan</th>
            <th scope="col">Saldo</th>
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@transaksi.Bukti</td>
            <td>@transaksi.KdBank</td>
            <td>@transaksi.NamaSup</td>
            <td>@transaksi.Tanggal.ToShortDateString()</td>
            <td>@transaksi.Keterangan</td>
            <td>@transaksi.Jumlah.ToString("N")</td>
            <td>
                @*<button @onclick="() => OpenRubah(transaksi.ArTransHId)" class="btn btn-success">Edit</button>*@
                <button @onclick="() => OpenDeleteDialog(transaksi)" class="btn btn-danger">Delete</button>
                <button @onclick="() => OpenPrint(transaksi.ApTransHId)" class="btn btn-danger">Print</button>
            </td>
        </RowTemplate>
    </DataGridComponent>


</div>

@if (DeleteDialogOpen)
{
    <ModalDialogComponent Title="Are you sure?" Text="Do you want to delete this entry?" OnClose="OnDeleteDialogClose"></ModalDialogComponent>
}

@if (NullDialogOpen)
{
    <ModalDialogComponent Title="MESSAGE" Text="Transaction Already Has Payment" TombolSave="false" OnClose="OnDeleteNullClose"></ModalDialogComponent>
}



@code {

    private List<ApTransH> TransHeader;
    private List<ApTransD> TransDetail;
    private ApTransH _bankToDelete;

    public bool DeleteDialogOpen { get; set; }
    public bool NullDialogOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadGet();

    }

    private void LoadGet()
    {
        TransHeader = service.Get3TransH();
        TransDetail = service.GetTransD();
    }


    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await service.DelTransH(_bankToDelete.ApTransHId);
            _bankToDelete = null;
        }

        DeleteDialogOpen = false;
        LoadGet();

        StateHasChanged();

    }

    private void OnDeleteNullClose(bool accepted)
    {
        //if (accepted)
        //{
        //    await cashBank.DelBank(_bankToDelete.CbBankId);
        //    _bankToDelete = null;
        //}

        DeleteDialogOpen = false;
        NullDialogOpen = false;
        LoadGet();
        StateHasChanged();

    }
    private void OpenDeleteDialog(ApTransH bank)
    {
        // var cekSaldo = service.CekAlreadyPayment(bank.Bukti);

        // if (cekSaldo)
        //  {
        //      NullDialogOpen = true;
        //  }
        //  else
        // {
        DeleteDialogOpen = true;
        //  }

        _bankToDelete = bank;
        StateHasChanged();
    }

    private void OpenRubah(int xKdBank)
    {
        navigationmanager.NavigateTo($"/ModuleHutang/EditTransHutang/{xKdBank}");
    }

    private void OpenPrint(int xKdBank)
    {
        //  navigationmanager.NavigateTo($"/PrintBuktiBayar/{xKdBank}");
    }


    public void Dispose()
    {

    }
}
