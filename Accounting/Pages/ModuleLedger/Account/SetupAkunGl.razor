@page "/ModuleLedger/SetupAkunGl"
@using eSoft.Ledger.Model
@using eSoft.Ledger.View
@using eSoft.Ledger.Services

@inject ILedgerServices ledgerServices 
@implements IDisposable
@inject NavigationManager navigationmanager

<div class="container">
    <h1>Setup Akun GL</h1>
</div>


<div class="container">
    <NavLink href="/ModuleLedger/AddAccount" class="btn btn-primary">Add</NavLink>
</div>

<br />
<br />


<div class="container">
    <DataGridComponent Items="Banks" Context="cbBank" GetFilterableText="@(item =>$"{item.GlAcct} {item.GlNama} {(StatusGl)item.GlTipe}" )">
        <TableHeader>
            <th scope="col">Account</th>
            <th scope="col">Account Name</th>
            <th scope="col">Tipe</th>
            
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@cbBank.GlAcct</td>
            <td>@cbBank.GlNama</td>
            <td>@((StatusGl)cbBank.GlTipe)</td>
            
            <td>
                <button @onclick="() => OpenRubah(cbBank.GlAccountId)" class="btn btn-success">Edit</button>
                <button @onclick="() => OpenDeleteDialog(cbBank)" class="btn btn-danger">Delete</button>
            </td>
        </RowTemplate>
    </DataGridComponent>


</div>

@if (DeleteDialogOpen)
{
    <ModalDialogComponent Title="Are you sure?" Text="Do you want to delete this entry?" OnClose="OnDeleteDialogClose"></ModalDialogComponent>
}

@if (NullDialogOpen)
{
    <ModalDialogComponent Title="MESSAGE" Text="Saldo is not Zero" TombolSave="false" OnClose="OnDeleteNullClose"></ModalDialogComponent>
}



@code {

    private List<GlAccount> Banks;
    private GlAccount _bankToDelete;



    public bool DeleteDialogOpen { get; set; }
    public bool NullDialogOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadGet();

    }

    private void LoadGet()
    {
        Banks = ledgerServices.GetGlAccount();
    }

    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await ledgerServices.DelGlAccount(_bankToDelete.GlAccountId);
            _bankToDelete = null;
        }

        DeleteDialogOpen = false;
        LoadGet();
        StateHasChanged();

    }

    private void OnDeleteNullClose(bool accepted)
    {
        //if (accepted)
        //{
        //    await cashBank.DelBank(_bankToDelete.CbBankId);
        //    _bankToDelete = null;
        //}

        DeleteDialogOpen = false;
        NullDialogOpen = false;
        LoadGet();
        StateHasChanged();

    }
    private void OpenDeleteDialog(GlAccount bank)
    {
        if (bank.GlSaldo != 0)
        {
            NullDialogOpen = true;
        }
        else
        {
            DeleteDialogOpen = true;
        }


        _bankToDelete = bank;
        StateHasChanged();
    }

    private void OpenRubah(int xKdBank)
    {
        navigationmanager.NavigateTo($"/ModuleLedger/EditAccount/{xKdBank}");
    }


    public void Dispose()
    {

    }
}
