@page "/ModuleLedger/AddAccount"
@using eSoft.Ledger.Model
@using eSoft.Ledger.View
@using eSoft.Ledger.Services

@inject ILedgerServices service
@inject NavigationManager navigationmanager


<div class="top-row px-4 " style="z-index:5">
    <h3>Add Account</h3>
</div>

<div class="content px-4">
    <EditForm Model="@bank" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>
                Account Code :
                <InputText id="codeBank" class="form-control" @bind-Value="bank.GlAcct" style="text-transform:uppercase" @onfocusout="cekKode" />
            </label>
        </div>
        <div class="form-group">
            <label>
                Account Name :
                <InputText class="form-control" @bind-Value="bank.GlNama" />
            </label>
        </div>

        <div class="form-group">
            <label>
                Account Type :
                <br/>
                @*<RadioButtonComponent TEnum="StatusGl" ></RadioButtonComponent>*@
                <InputRadioGroup @bind-Value="bank.GlStatus">
                    @foreach (var status in (StatusGl[])Enum.GetValues(typeof(StatusGl)))
                    {
                        <InputRadio Value="status" />
                        @status
                            <br />
                       
                    }

                </InputRadioGroup>

            </label>
        </div>

        <div class="float-md-right">
            <button class="btn-success" type="submit">Simpan</button>
        </div>

    </EditForm>
</div>

@if (DialogOpen)
{
    <ModalDialogComponent Title="Alert" Text="Kode Bank Sudah Ada" TombolSave="false" OnClose="OnDialogClose"></ModalDialogComponent>
}


@code {

    GlAccountView bank = new GlAccountView();
    public string Testing { get; set; }
    private bool DialogOpen { get; set; }
    private StatusGl statusGL { get; set; }

    

    protected override void OnInitialized()
    {
        base.OnInitialized();
        bank.GlTipe = 1;

    }

    private void cekKode()
    {
        Testing = bank.GlAcct;
        DialogOpen = service.CekKdAkun(Testing);
        if (DialogOpen)
        {
            bank.GlAcct = "";
        }
        StateHasChanged();
    }

    private void OnDialogClose(bool accepted)
    {

        DialogOpen = false;
        StateHasChanged();

    }



    private void HandleValidSubmit()
    {
        var newEdit = service.AddGlAccount(bank);
        if (newEdit)
        {


        }

        navigationmanager.NavigateTo("/ModuleLedger/SetupAkunGl", false);

    }

    private void OnRadioClose(StatusGl accepted)
    {
        bank.GlStatus = accepted;

        //System.Console.WriteLine(accepted);
        // StateHasChanged();

    }
}
