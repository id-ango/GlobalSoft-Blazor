@page "/ModulePiutang/TransArDp"
@using eSoft.Piutang.Model
@using eSoft.Piutang.Services

@inject IPaymentArDpServices service
@inject IReceivableServices cashBank
@implements IDisposable
@inject NavigationManager navigationmanager

<div class="container">
    <h1>Transaksi Bayar Dimuka </h1>
</div>


<div class="container">
    <NavLink href="/ModulePiutang/AddTransArDp" class="btn btn-primary">Add</NavLink>
</div>

<br />
<br />


<div class="container">
    <DataGridComponent Items="TransHeader" Context="transaksi" GetFilterableText="@(item =>$"{item.Bukti} {item.Keterangan} {item.Customer}")">
        <TableHeader>
            <th scope="col">Doc #</th>
            <th scope="col">Bank</th>
            <th scope="col">Customer</th>
            <th scope="col">Tanggal</th>
            <th scope="col">Keterangan</th>
            <th scope="col">Saldo</th>
            <th></th>
        </TableHeader>
        <RowTemplate>
            <td>@transaksi.Bukti</td>
            <td>@transaksi.KdBank</td>
            <td>@transaksi.NamaCust</td>
            <td>@transaksi.Tanggal.ToShortDateString()</td>
            <td>@transaksi.Keterangan</td>
            <td>@transaksi.Jumlah.ToString("N")</td>
            <td>
                @*<button @onclick="() => OpenRubah(transaksi.ArTransHId)" class="btn btn-success">Edit</button>*@
                <button @onclick="() => OpenDeleteDialog(transaksi)" class="btn btn-danger">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                        <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                    </svg>
                </button>
                <button @onclick="() => OpenPrint(transaksi.ArTransHId)" class="btn btn-danger">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-printer" viewBox="0 0 16 16">
                        <path d="M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z" />
                        <path d="M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z" />
                    </svg>
                </button>
            </td>
        </RowTemplate>
    </DataGridComponent>


</div>

@if (DeleteDialogOpen)
{
    <ModalDialogComponent Title="Are you sure?" Text="Do you want to delete this entry?" OnClose="OnDeleteDialogClose"></ModalDialogComponent>
}

@if (NullDialogOpen)
{
    <ModalDialogComponent Title="MESSAGE" Text="Transaction Already Has Payment" TombolSave="false" OnClose="OnDeleteNullClose"></ModalDialogComponent>
}



@code {

    private List<ArTransH> TransHeader;
    private List<ArTransD> TransDetail;
    private ArTransH _bankToDelete;

    public bool DeleteDialogOpen { get; set; }
    public bool NullDialogOpen { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadGet();

    }

    private void LoadGet()
    {
        TransHeader = service.Get3TransH();
        TransDetail = service.GetTransD();
    }


    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await service.DelTransH(_bankToDelete.ArTransHId);
            _bankToDelete = null;
        }

        DeleteDialogOpen = false;
        LoadGet();

        StateHasChanged();

    }

    private void OnDeleteNullClose(bool accepted)
    {
        //if (accepted)
        //{
        //    await cashBank.DelBank(_bankToDelete.CbBankId);
        //    _bankToDelete = null;
        //}

        DeleteDialogOpen = false;
        NullDialogOpen = false;
        LoadGet();
        StateHasChanged();

    }
    private void OpenDeleteDialog(ArTransH bank)
    {
        // var cekSaldo = service.CekAlreadyPayment(bank.Bukti);

        // if (cekSaldo)
        //  {
        //      NullDialogOpen = true;
        //  }
        //  else
        // {
        DeleteDialogOpen = true;
        //  }

        _bankToDelete = bank;
        StateHasChanged();
    }

    private void OpenRubah(int xKdBank)
    {
        navigationmanager.NavigateTo($"/ModulePiutang/EditTransPiutang/{xKdBank}");
    }

    private void OpenPrint(int xKdBank)
    {
        //  navigationmanager.NavigateTo($"/PrintBuktiBayar/{xKdBank}");
    }


    public void Dispose()
    {

    }
}
