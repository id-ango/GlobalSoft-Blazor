
@using eSoft.Persediaan.Model


@using System.Collections.Generic
@using System.Linq


<div class="bg-light justify-content-between">
    @*@nJumlah*@
    <p align="right">
        <input class="mr-sm-2" type="search" placeholder="Search" aria-label="Search" @bind-value="searchText">
        <button class="btn btn-outline-success my-2 my-sm-0" type="button" @onclick="searchFind">Search</button>
    </p>
</div>
<table class="table table-striped table-hover">

    <thead>
        <tr>          
            <th scope="col" style="width:40%">Item</th>
            <th scope="col" style="width:10%">Qty</th>
            <th scope="col" style="width:10%">Hrg Jual</th>
            <th scope="col" style="width:10%">USD</th>
            <th scope="col" style="width:10%">Hrg Net</th>
            <th scope="col" style="width:10%">Cost</th>
            <th style="width:10%"></th>
        </tr>
    </thead>
</table>
<div style="display:block;position:relative;height:430px;overflow:auto ">
    <table class="table table-striped table-hover">

        @*<thead>

            <tr>@TableHeader</tr>
        </thead>*@
        @*<thead>
            <tr>
                <th scope="col">Item</th>
                <th scope="col">Qty</th>
                <th scope="col">Hrg Jual</th>
                <th scope="col">USD</th>
                <th scope="col">Hrg Net</th>
                <th scope="col">Cost</th>
                <th></th>
            </tr>
        </thead>*@
        <tbody>
            @foreach (var transaksi in result)
            {
                <tr>

                    <td style="width:40%">
                        @transaksi.NamaItem
                        <br />
                        <span class="badge bg-primary">@transaksi.ItemCode</span>
                        <br />
                        <span class="badge bg-secondary">@transaksi.Satuan</span>
                    </td>
                    <td style="width:10%">@transaksi.Qty.ToString("N")</td>
                    <td style="width:10%">@transaksi.HrgJual.ToString("N")</td>
                    <td style="width:10%">@transaksi.HrgUsd.ToString("N")</td>
                    <td style="width:10%">@transaksi.HrgNetto.ToString("N")</td>
                    <td style="width:10%">@transaksi.Cost.ToString("N")</td>

                    <td style="width:10%">
                        <button @onclick="() => BtnDetail(transaksi)" class="btn btn-success">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-square" viewBox="0 0 16 16">
                                <path d="M3.626 6.832A.5.5 0 0 1 4 6h8a.5.5 0 0 1 .374.832l-4 4.5a.5.5 0 0 1-.748 0l-4-4.5z" />
                                <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm15 0a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2z" />
                            </svg>
                        </button>

                        @*<button @onclick="() => OpenPrint(transaksi.OeTransHId)" class="btn btn-danger">Print</button>*@
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>

@code {

    [Parameter]
    public List<IcItem> Items { get; set; }

    [Parameter]
    public EventCallback<IcItem> OnDetail { get; set; }

    private string nJumlah { get; set; }

    private List<IcItem> result = new List<IcItem>();
    private List<IcItem> result2 = new List<IcItem>();

    private string searchText;


    private Task BtnDetail(IcItem xKode)
    {
        return OnDetail.InvokeAsync(xKode);

    }
    protected override void OnInitialized()
    {
        base.OnInitialized();

    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        result2 = Items;
        searchFind();
        StateHasChanged();
    }

    private void searchFind()
    {
        result2 = Items;

        if (!string.IsNullOrEmpty(searchText))
        {


            //   result = result.Where(x => x.NamaCust || x.AlamatKirim).ToList();
            result2 = (from t in result2
                       where
   ((t.NamaItem?.Contains(searchText, StringComparison.InvariantCultureIgnoreCase) ?? false) ||
     (t.ItemCode?.Contains(searchText, StringComparison.InvariantCultureIgnoreCase) ?? false))
                       select t).ToList();



        }
        if (result2.Count != 0)
            result = result2;
        else
            result = Items;

      //  nJumlah = result.Sum(x => x.Jumlah).ToString("N");
    }



}
